/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:34957726
*  Stack Overflow answer #:34957905
*  And Stack Overflow answer#:34963985
*/
int main (int argc, char *argv []) {
    FILE *fp;
    char filename [100];
    char line [MAX_LINE_LEN];
    char *p;
    int array [MAX_NUM];
    int index, count, max;
    printf ("Please enter the file name: \n");
    if (scanf ("%99s", filename) != 1) {
        fatal ("Error in entering file.");
    }
    if ((fp = fopen (filename, "r")) == NULL) {
        fatal ("Unable to open the file.");
    }
    while ((p = fgets (line, MAX_LINE_LEN, fp)) != NULL) {
        p += strspn (p, " \t\n");
        if (*p == '#' || *p == '\0') {
            continue;
        }
        for (count = 0; *p != '\0';) {
            if (isdigit ((unsigned char) *p)) {
                array[count++] = strtol (p, &p, 10);
                printf ("%d\n", array [count]);
            }
            else {
                p += strcspn (p, " \t\n");
            }
            p += strspn (p, " \t\n");
        }
        index = get_max_occurrence_index (array, count);
        max = get_number_of_occurrences (array, count, array[index]);
        printf ("The element that occurs most often is %d\n", array [index]);
        printf ("And it has occurred %d times\n", max);
    }
    fclose (fp);
    return 0;
}

int main (void) {
    int array [sizea] = {1, 3, 6, 8, 3, 6, 7, 4, 6, 9, 0, 3, 5, 12, 65, 3, 76, 5, 3, 54, 1, 3, 6, 89, 3, 6, 7, 4, 6, 9, 0, 4, 5, 12, 65, 3, 76, 5, 3, 54, 1, 9, 6, 8, 3, 45, 7, 4, 6, 9, 0, 89, 5, 12, 65, 3, 76, 5, 3, 54, 6, 3, 6, 8, 3, 6, 7, 4, 6, 9, 0, 23, 5, 12, 65, 3, 76, 5, 3, 54, 1, 3, 6, 90, 3, 6, 7, 4, 6, 9, 0, 5, 5, 12, 65, 3, 76, 5, 3, 54};
    int number;
    int count = 1;
    int highest = 1;
    int highestCnt = 1;
    int end = sizea - 1;
    int j;
    int i;
    for (j = 0; j <= end; j++) {
        number = array[j];
        count = 1;
        for (i = j + 1; i <= end; i++) {
            while (array[i] == number && i <= end) {
                count++;
                array[i] = array[end];
                end--;
            }
        }
        if (count > highestCnt) {
            highest = number;
            highestCnt = count;
        }
    }
    printf ("number: %i, count: %i", highest, highestCnt);
}

