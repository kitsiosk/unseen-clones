/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:29321822
*  Stack Overflow answer #:29321833
*  And Stack Overflow answer#:29322264
*/
int main (void) {
    unsigned int index;
    unsigned int size;
    int result;
    fprintf (stderr, "input the desired array size: ");
    while (((result = scanf ("%u", &size)) != 1) && (result != EOF)) {
        fprintf (stderr, "invalid input, try again\n");
        clearstdin ();
    }
    if (result == EOF) {
        fprintf (stderr, "EOF recieved, ending the program\n");
        return -1;
    }
    if (size < SOMELARGESIZE) {
        int array [size];
        for (index = 0; index < size; index++) {
            fprintf (stderr, "input an integer: ");
            if (((result = scanf ("%d", &array[index])) == 1) && (result != EOF))
                fprintf (stdout, "\tarray[%d] = %d\n", index, array[index]);
            else if (result == EOF) {
                fprintf (stderr, "EOF recieved, ending the program\n");
                return -1;
            }
            else {
                fprintf (stderr, "invalid input, try again\n");
                index -= 1;
            }
            clearstdin ();
        }
    }
    else {
        fprintf (stderr, "sorry, you requested a very large array\n");
        return -1;
    }
    return 0;
}

int main () {
    int i;
    int n;
    int a [SIZE];
    printf ("enter number of elements(disks) 0-%d\n", SIZE - 1);
    while (scanf ("%d", &n) != 1 || n >= SIZE) {
        scanf ("%*[^0-9\n]");
        printf ("problem with input, try again\n");
    }
    printf ("number was %d\n", n);
    printf ("enter the elements in ascending  order\n");
    for (i = 0; i < n; i++) {
        while (scanf ("%d", &a[i]) != 1) {
            scanf ("%*[^-0-9\n]");
            printf ("problem with input, try again\n");
        }
        printf ("number for a[%d] was %d\n", i, a [i]);
    }
    return 0;
}

