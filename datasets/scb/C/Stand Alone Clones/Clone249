/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:310363
*  Stack Overflow answer #:37530208
*  And Stack Overflow answer#:643257
*/
int main () {
    using namespace std : : chrono;
    using namespace date;
    auto base = make_zoned ("Pacific/Easter", sys_seconds {1142085600s});
    for (int i = 0; i < 4; ++i) {
    std :
        : cout << format ("%a %b %d %T %Y %Z", base) << '\n';
        base = base.get_local_time () + days {1};
    }
}

int main () {
    time_t base = 1238216400;
std :
    : time_t start_date_t = base;
std :
    : time_t end_date_t = base;
std :
    : tm start_date = * std : : localtime (& start_date_t);
std :
    : tm end_date = * std : : localtime (& end_date_t);
    end_date.tm_mday += 1;
std :
    : time_t b = mktime (& start_date);
std :
    : time_t e = mktime (& end_date);
std :
    : string start_date_str (ctime (& b));
std :
    : string stop_date_str (ctime (& e));
    cout << " begin (MSK) (DST is not active): " << start_date_str;
    cout << " end   (MSD) (DST is active):     " << stop_date_str;
}

