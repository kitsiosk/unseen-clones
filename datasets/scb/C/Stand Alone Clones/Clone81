/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:9076494
*  Stack Overflow answer #:49044880
*  And Stack Overflow answer#:26208539
*/
int main (void) {
    char mytime_1 [20] = "2018-02-28 13:00:00";
    char utctime_1 [20], back_1 [20];
    localToUTC (utctime_1, mytime_1);
    utcToLocal (back_1, utctime_1);
    printf ("My time: %s\n", mytime_1);
    printf ("UTC time: %s\n", utctime_1);
    printf ("Back: %s\n", back_1);
    printf ("-------------------------------------------\n");
    char mytime_2 [20] = "2018-07-28 17:00:00";
    char utctime_2 [20], back_2 [20];
    localToUTC (utctime_2, mytime_2);
    utcToLocal (back_2, utctime_2);
    printf ("My time: %s\n", mytime_2);
    printf ("UTC time: %s\n", utctime_2);
    printf ("Back: %s\n", back_2);
    printf ("-------------------------------------------\n");
    return 0;
}

int main (void) {
    time_t abs_ts, loc_ts, gmt_ts;
    struct tm loc_time_info, gmt_time_info;
    time (& abs_ts);
    localtime_r (& abs_ts, & loc_time_info);
    gmtime_r (& abs_ts, & gmt_time_info);
    loc_ts = mktime (&loc_time_info);
    gmt_ts = mktime (&gmt_time_info);
    if (gmt_time_info.tm_isdst == 1) {
        gmt_ts -= 3600;
    }
    printf ("Local timestamp: %lu\n" "UTC timestamp: %lu\n" "Difference in hours: %lu\n\n", loc_ts, gmt_ts, (loc_ts - gmt_ts) / 3600);
    return 0;
}

