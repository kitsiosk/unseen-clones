/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:9210528
*  Stack Overflow answer #:25794636
*  And Stack Overflow answer#:34957656
*/
int split (char *str, char delim, char ***array, int *length) {
    char *p;
    char **res;
    int count = 0;
    int k = 0;
    p = str;
    while ((p = strchr (p, delim)) != NULL) {
        *p = 0;
        p++;
        count++;
    }
    res = calloc (1, count * sizeof (char *));
    if (!res)
        return -1;
    p = str;
    for (k = 0; k < count; k++) {
        if (*p)
            res[k] = p;
        p = strchr (p, 0);
        p++;
    }
    *array = res;
    *length = count;
    return 0;
}

int split (const char *txt, char delim, char ***tokens) {
    int *tklen, *t, count = 1;
    char **arr, *p = (char *) txt;
    while (*p != '\0')
        if (*p++ == delim)
            count += 1;
    t = tklen = calloc (count, sizeof (int));
    for (p = (char *) txt; *p != '\0'; p++)
        *p == delim ? *t++ : (*t)++;
    *tokens = arr = malloc (count * sizeof (char *));
    t = tklen;
    p = *arr++ = calloc (*(t++) + 1, sizeof (char *));
    while (*txt != '\0') {
        if (*txt == delim) {
            p = *arr++ = calloc (*(t++) + 1, sizeof (char *));
            txt++;
        }
        else
            *p++ = *txt++;
    }
    free (tklen);
    return count;
}

