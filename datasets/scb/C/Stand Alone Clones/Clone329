/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:13422394
*  Stack Overflow answer #:13422582
*  And Stack Overflow answer#:13422549
*/
void *CalculateSum (void *args) {
    int *argPtr = args;
    int i, j, sum = 0;
    int threadindex = *argPtr;
    for (i = 0; i <= N - 1; i++) {
        if (i % NTHREADS != threadindex)
            continue;
        for (j = 0; j <= M - 1; j++) {
            sum += dimensional_array[i][j];
        }
    }
    pthread_mutex_lock (& mutex1);
    Mutex
    must go here counter ++;
    pthread_mutex_unlock (& mutex1);
    *argPtr = sum;
}

void *CalculateSum (void *dummyPtr) {
    int j, sum = 0;
    int i = (int) dummyPtr;
    for (j = 0; j <= M - 1; j++) {
        sum += dimensional_array[i][j];
    }
    printf (" Sum = %d\n", sum);
    pthread_mutex_lock (& mutex1);
    counter++;
    pthread_mutex_unlock (& mutex1);
}

