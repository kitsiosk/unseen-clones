/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:3757800
*  Stack Overflow answer #:3758290
*  And Stack Overflow answer#:3759214
*/
char *find_sum (char *a, char *b) {
    int lenA = strlen (a), lenB = strlen (b);
    int max = lenA > lenB ? lenA : lenB;
    char *res = (char *) malloc (max +2);
    memset (res, '0', max + 1);
    res[max + 1] = '\0';
    int i = lenA - 1, j = lenB - 1, k = max;
    for (; i >= 0 || j >= 0; --i, --j, --k) {
        int sum = 0;
        if (i >= 0 && j >= 0)
            sum = a[i] - '0' + b[j] - '0' + res[k] - '0';
        else if (j >= 0)
            sum = b[j] - '0' + res[k] - '0';
        else if (i >= 0)
            sum = a[i] - '0' + res[k] - '0';
        res[k] = sum % 10 + '0';
        res[k - 1] = sum / 10 + '0';
    }
    return res;
}

char *find_sum (char *a, char *b) {
    char *res;
    int alen, blen, rlen;
    int carry;
    alen = strlen (a);
    blen = strlen (b);
    rlen = 1 + ((alen > blen) ? alen : blen);
    res = malloc (1 + rlen);
    if (res) {
        int oldlen = rlen;
        res[rlen] = 0;
        carry = 0;
        while (rlen) {
            int tmp;
            if (alen && blen)
                tmp = a[--alen] - '0' + b[--blen] - '0';
            else if (alen)
                tmp = a[--alen] - '0';
            else if (blen)
                tmp = b[--blen] - '0';
            else
                tmp = 0;
            tmp += carry;
            res[--rlen] = '0' + tmp % 10;
            carry = tmp / 10;
        }
        if (res[0] == '0')
            memmove (res, res +1, oldlen);
    }
    return res;
}

