/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:2371292
*  Stack Overflow answer #:2378520
*  And Stack Overflow answer#:2393361
*/
int main () {
    int lines, number = 0, dividend, ans = 0, i, chars_read;
    char buf [BUFSIZE + 1] = {0};
    scanf ("%d%d\n", & lines, & dividend);
    while ((chars_read = fread (buf, 1, BUFSIZE, stdin)) > 0) {
        for (i = 0; i < chars_read; i++) {
            if (buf[i] != '\n')
                number = buf[i] - '0' + 10 * number;
            else {
                if (number % dividend == 0)
                    ans += 1;
                lines -= 1;
                number = 0;
            }
        }
        if (lines == 0)
            break;
    }
    printf ("%d are divisible by %d \n", ans, dividend);
    return 0;
}

int main (int argc, char **argv) {
    char *data;
    char *src;
    char *end;
    unsigned long k;
    unsigned long n;
    unsigned long answer = 0;
    size_t i;
    arg0 = argv[0];
    data = memory_map (0);
    src = data;
    n = read_integer (src, &end);
    src = end;
    k = read_integer (src, &end);
    src = end;
    for (i = 0; i < n; i++, src = end) {
        unsigned long v = read_integer (src, &end);
        if (v % k == 0)
            answer++;
    }
    printf ("%lu\n", answer);
    return (0);
}

