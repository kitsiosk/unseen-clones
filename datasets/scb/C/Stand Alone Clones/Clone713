/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:52715808
*  Stack Overflow answer #:52716480
*  And Stack Overflow answer#:52717293
*/
int main (int argc, char *argv []) {
    struct termios orig_attr, new_attr;
    int c = '\0';
    int n = 5;
    tcgetattr (fileno (stdin), & orig_attr);
    memcpy (& new_attr, & orig_attr, sizeof (new_attr));
    new_attr.c_lflag &= ~(ICANON | ECHO);
    new_attr.c_cc[VMIN] = 0;
    new_attr.c_cc[VTIME] = 10;
    tcsetattr (fileno (stdin), TCSANOW, & new_attr);
    printf ("Starting with n = %d\n", n);
    do {
        c = getchar ();
        if (c != EOF) {
            n++;
            printf ("Key pressed!\n");
            printf ("n++ => %d\n", n);
        }
        else {
            n--;
            printf ("n-- => %d\n", n);
            if (n == 0) {
                printf ("Exiting ...\n");
                break;
            }
            if (feof (stdin)) {
                clearerr (stdin);
            }
        }
    }
    while (c != 'q');
    tcsetattr (fileno (stdin), TCSANOW, & orig_attr);
    return 0;
}

int main (void) {
    int ch;
    timer_t tid;
    struct itimerspec its = {0};
    struct sigevent se = {0};
    se.sigev_notify = SIGEV_THREAD;
    se.sigev_notify_function = timer;
    its.it_value.tv_sec = its.it_interval.tv_sec = 1;
    timer_create (CLOCK_REALTIME, & se, & tid);
    timer_settime (tid, 0, & its, NULL);
    initscr ();
    halfdelay (1);
    noecho ();
    curs_set (0);
    for (;;) {
        ch = getch ();
        if (ch != ERR) {
            changed = 1;
            value++;
        }
        if (changed) {
            changed = 0;
            mvprintw (0, 0, "%d ", value);
            refresh ();
        }
    }
    endwin ();
}

