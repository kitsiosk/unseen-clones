/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:10564670
*  Stack Overflow answer #:45641442
*  And Stack Overflow answer#:10565120
*/
int main (int argc, char **argv) {
    cl_int e = 0;
    cl_platform_id platform = 0;
    cl_device_id device = 0;
    e = clGetPlatformIDs (1, &platform, 0);
    if (e)
        exit (e);
    e = clGetDeviceIDs (platform, CL_DEVICE_TYPE_ALL, 1, &device, 0);
    if (e)
        exit (e);
    cl_context context = clCreateContext (0, 1, &device, 0, 0, &e);
    if (e)
        exit (e);
    cl_command_queue queue = clCreateCommandQueue (context, device, 0, &e);
    if (e)
        exit (e);
    cl_program program = clCreateProgramWithSource (context, argc, (const char **) argv, 0, &e);
    cl_kernel kernel = 0;
    if (e)
        exit (e);
    e = clBuildProgram (program, 1, &device, 0, 0, 0);
    if (e)
        exit (e);
    e = clCreateKernelsInProgram (program, 1, &kernel, 0);
    if (e)
        exit (e);
    e = clSetKernelArg (kernel, 0, sizeof (int), &argc);
    if (e)
        exit (e);
    e = clEnqueueTask (queue, kernel, 0, 0, 0);
    if (e)
        exit (e);
}

int main (int argc, char **argv) {
    ofstream f ("tmp.cpp");
    f << "#include<stdlib.h>\n#include \"structs.h\"\n extern \"C\" void F(S &s) { s.a += s.a; s.b *= s.b; }\n";
    f.close ();
    system ("/usr/bin/gcc -shared tmp.cpp -o libtmp.so");
    void *fLib = dlopen ("./libtmp.so", RTLD_LAZY);
    if (!fLib) {
        cerr << "Cannot open library: " << dlerror () << '\n';
    }
    if (fLib) {
        int (* fn) (S &) = dlsym (fLib, "F");
        if (fn) {
            for (int i = 0; i < 11; i++) {
                S s;
                s.a = i;
                s.b = i;
                fn (s);
                cout << s.a << " " << s.b << endl;
            }
        }
        dlclose (fLib);
    }
    return 0;
}

