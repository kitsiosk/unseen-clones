/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:6127503
*  Stack Overflow answer #:6127808
*  And Stack Overflow answer#:6127606
*/
void main () {
    int elesize = sizeof (int);
    int i;
    int r;
    int src [20];
    int tgt [20];
    for (i = 0; i < 20; src[i] = i++)
        ;
    srand ((unsigned int) time (0));
    for (i = 20; i > 0; i--) {
        r = rand () % i;
        memcpy (& tgt [20 - i], & src [r], elesize);
        memcpy (& src [r], & src [i - 1], elesize);
    }
    for (i = 0; i < 20; printf ("%d ", tgt[i++]))
        ;
}

int main () {
    srand (time (NULL));
    int intarr [] = {1, -5, 7, 3, 20, 2};
    print_type (NELEMS (intarr), printf ("%d,", intarr [i]));
    shuffle (intarr, NELEMS (intarr), sizeof (intarr [0]));
    print_type (NELEMS (intarr), printf ("%d,", intarr [i]));
    struct cmplex cmparr [] = {{1, 3.14}, {5, 7.12}, {9, 8.94}, {20, 1.84}};
    print_type (NELEMS (intarr), printf ("{%d %f},", cmparr [i].foo, cmparr [i].bar));
    shuffle (cmparr, NELEMS (cmparr), sizeof (cmparr [0]));
    print_type (NELEMS (intarr), printf ("{%d %f},", cmparr [i].foo, cmparr [i].bar));
    return 0;
}

