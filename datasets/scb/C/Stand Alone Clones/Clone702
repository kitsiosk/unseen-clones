/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:15182328
*  Stack Overflow answer #:32440059
*  And Stack Overflow answer#:15184359
*/
int main (void) {
    pthread_t tid0, tid1;
    sem_init (& semP, 0, 0);
    sem_init (& semC, 0, 0);
    pthread_create (& tid0, NULL, consumer, NULL);
    pthread_create (& tid1, NULL, producer, NULL);
    pthread_join (tid0, NULL);
    pthread_join (tid1, NULL);
    sem_destroy (& semC);
    sem_destroy (& semP);
    return 0;
}

int main () {
    int key, share_id, num;
    char *data;
    int semid;
    struct sembuf sb = {0, -1, 0};
    key = ftok (".", 'a');
    if (key == -1) {
        printf ("\n\n Initialization Falied of shared memory \n\n");
        return 1;
    }
    share_id = shmget (key, 1024, IPC_CREAT | 0744);
    if (share_id == -1) {
        printf ("\n\n Error captured while share memory allocation\n\n");
        return 1;
    }
    data = (char *) shmat (share_id, (void *) 0, 0);
    strcpy (data, "Testing string\n");
    if (!fork ()) {
        sb.sem_op = -1;
        semop (share_id, (struct sembuf *) & sb, 1);
        strncat (data, "feeding form child\n", 20);
        sb.sem_op = 1;
        semop (share_id, (struct sembuf *) & sb, 1);
        _Exit (0);
    }
    else {
        sb.sem_op = -1;
        semop (share_id, (struct sembuf *) & sb, 1);
        strncat (data, "feeding form parent\n", 20);
        sb.sem_op = 1;
        semop (share_id, (struct sembuf *) & sb, 1);
    }
    return 0;
}

