/*
* Semantic clone benchmark
*  Source code are extracted from Stack Overflow
*  Stack overflow Question #:37817181
*  Stack Overflow answer #:37818650
*  And Stack Overflow answer#:37818800
*/
char *int_to_string (int n) {
    char str [100] = "";
    char str1 [100] = "";
    ...strcat (str, int_to_string (n / 10));
    strcat (str, " ");
    strcat (str, int_to_string (n % 10));
    strcpy (str1, str);
    return str1;
}

char *int_to_string (int n, char str [], char numStr []) {
    if (n < 10) {
        switch (n) {
        case 0 :
            strcat (str, "Zero");
            break;
        case 1 :
            strcat (str, "One");
            break;
        case 2 :
            strcat (str, "Two");
            break;
        case 3 :
            strcat (str, "Three");
            break;
        case 4 :
            strcat (str, "Four");
            break;
        case 5 :
            strcat (str, "Five");
            break;
        case 6 :
            strcat (str, "Six");
            break;
        case 7 :
            strcat (str, "Seven");
            break;
        case 8 :
            strcat (str, "Eight");
            break;
        case 9 :
            strcat (str, "Nine");
            break;
        }
        return str;
    }
    else {
        int digit = numStr[0] - '0';
        int newNr = n - digit * pow (10, strlen (numStr) -1);
        strcat (str, return_digit_word (numStr [0]));
        sprintf (numStr, "%d", newNr);
        return int_to_string (newNr, str, numStr);
    }
}

